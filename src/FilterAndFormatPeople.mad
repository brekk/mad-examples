import IO from "IO"
import List from "List"
import String from "String"



alias Person = { age :: Integer, firstName :: String, lastName :: String }

filterByLastName :: String -> List Person -> List Person
filterByLastName = (lastName, list) => List.filter(
  (x) => String.toLower(x.lastName) == String.toLower(lastName),
  list,
)

printFullName :: Person -> String
printFullName = (person) => `${person.firstName} ${person.lastName}`

printPeopleWithLastName = (lastName, list) => pipe(
  filterByLastName(lastName),
  map(printFullName),
)(list)

main = () => {
  // super reasonable data and names, people are weird
  people = [
    { age: 50, firstName: "Alice", lastName: "Cool" },
    { age: 50, firstName: "Bob", lastName: "Cool" },
    { age: 50, firstName: "Christopher", lastName: "Uncool" },
    { age: 50, firstName: "Delphine", lastName: "Uncool" },
    { age: 50, firstName: "Elena", lastName: "Uncool" },
    { firstName: "Frederick", lastName: "Uncool", age: 50 },
  ]
  printPeopleWithLastName("cool", people) |> IO.trace("The cool folks!")
}
